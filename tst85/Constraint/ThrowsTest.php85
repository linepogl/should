<?php // This file is autogenerated

declare(strict_types=1);

namespace Tests\Constraint;

use InvalidArgumentException;
use PHPUnit\Framework\TestCase;
use RuntimeException;
use Should\Constraint\Throws;

use function Should\shouldBe;

class ThrowsTest extends TestCase
{
    public function test_throws(): void
    {
        $f1 = static fn() => throw new RuntimeException('Test');
        $f2 = static fn() => null;
        new Throws(RuntimeException::class)->evaluate($f1, '', true) |> shouldBe(true);
        new Throws(new RuntimeException('Test'))->evaluate($f1, '', true) |> shouldBe(true);
        new Throws(new RuntimeException('Test1'))->evaluate($f1, '', true) |> shouldBe(false);
        new Throws(InvalidArgumentException::class)->evaluate($f1, '', true) |> shouldBe(false);
        new Throws(new InvalidArgumentException('Test'))->evaluate($f1, '', true) |> shouldBe(false);
        new Throws(RuntimeException::class)->evaluate($f2, '', true) |> shouldBe(false);
        new Throws(new RuntimeException('Test'))->evaluate($f2, '', true) |> shouldBe(false);
    }

    public function test_to_string(): void
    {
        new Throws(RuntimeException::class)->toString() |> shouldBe('throws RuntimeException');
        new Throws(new RuntimeException())->toString() |> shouldBe('throws RuntimeException');
    }
}
